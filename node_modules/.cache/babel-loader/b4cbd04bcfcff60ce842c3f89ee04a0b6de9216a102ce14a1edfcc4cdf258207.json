{"ast":null,"code":"var _jsxFileName = \"/Users/lucaskhan/Desktop/triage-prediction/triage-prediction/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    age: '',\n    sex: '',\n    arrems: ''\n  });\n  const [prediction, setPrediction] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send data to Flask backend\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      setPrediction(result.prediction);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: formData.age,\n          onChange: e => setFormData({\n            ...formData,\n            age: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sex:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radioOption\",\n          value: \"0\",\n          checked: formData.sex === '0',\n          onChange: () => setFormData({\n            ...formData,\n            sex: '0'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), \"Male\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radioOption\",\n          value: \"1\",\n          checked: formData.sex === '1',\n          onChange: () => setFormData({\n            ...formData,\n            sex: '1'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \"Female\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), prediction !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"l1ofzgLMmEjWJR/2lAKgtLnOC5w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","formData","setFormData","age","sex","arrems","prediction","setPrediction","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","className","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","name","checked","_c","$RefreshReg$"],"sources":["/Users/lucaskhan/Desktop/triage-prediction/triage-prediction/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [formData, setFormData] = useState({\n    age: '',\n    sex: '',\n    arrems: '',\n    \n  });\n  const [prediction, setPrediction] = useState<number | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      // Send data to Flask backend\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n      setPrediction(result.prediction);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          Age:\n          <input\n            type=\"number\"\n            value={formData.age}\n            onChange={(e) => setFormData({ ...formData, age: e.target.value })}\n          />\n        </label>\n        <br />\n        <label>\n          Sex:\n          <input\n            type=\"radio\"\n            name=\"radioOption\"\n            value=\"0\"\n            checked={formData.sex === '0'}\n            onChange={() => setFormData({ ...formData, sex: '0' })}\n          />\n          Male\n          <input\n            type=\"radio\"\n            name=\"radioOption\"\n            value=\"1\"\n            checked={formData.sex === '1'}\n            onChange={() => setFormData({ ...formData, sex: '1' })}\n          />\n          Female\n        </label>\n\n        <br />\n        <button type=\"submit\">Predict</button>\n      </form>\n      {prediction !== null && <p>Prediction: {prediction}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,GAAG,EAAE,EAAE;IACPC,GAAG,EAAE,EAAE;IACPC,MAAM,EAAE;EAEV,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAEjE,MAAMY,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;QAC5DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,QAAQ;MAC/B,CAAC,CAAC;MAEF,MAAMiB,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpCZ,aAAa,CAACW,MAAM,CAACZ,UAAU,CAAC;IAClC,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAM0B,QAAQ,EAAEhB,YAAa;MAAAe,QAAA,gBAC3BzB,OAAA;QAAAyB,QAAA,GAAO,MAEL,eAAAzB,OAAA;UACE2B,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEzB,QAAQ,CAACE,GAAI;UACpBwB,QAAQ,EAAGlB,CAAC,IAAKP,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEE,GAAG,EAAEM,CAAC,CAACmB,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlC,OAAA;QAAAyB,QAAA,GAAO,MAEL,eAAAzB,OAAA;UACE2B,IAAI,EAAC,OAAO;UACZQ,IAAI,EAAC,aAAa;UAClBP,KAAK,EAAC,GAAG;UACTQ,OAAO,EAAEjC,QAAQ,CAACG,GAAG,KAAK,GAAI;UAC9BuB,QAAQ,EAAEA,CAAA,KAAMzB,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEG,GAAG,EAAE;UAAI,CAAC;QAAE;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,QAEF,eAAAlC,OAAA;UACE2B,IAAI,EAAC,OAAO;UACZQ,IAAI,EAAC,aAAa;UAClBP,KAAK,EAAC,GAAG;UACTQ,OAAO,EAAEjC,QAAQ,CAACG,GAAG,KAAK,GAAI;UAC9BuB,QAAQ,EAAEA,CAAA,KAAMzB,WAAW,CAAC;YAAE,GAAGD,QAAQ;YAAEG,GAAG,EAAE;UAAI,CAAC;QAAE;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC,UAEJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAERlC,OAAA;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlC,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACN1B,UAAU,KAAK,IAAI,iBAAIR,OAAA;MAAAyB,QAAA,GAAG,cAAY,EAACjB,UAAU;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAChC,EAAA,CAnEID,GAAa;AAAAoC,EAAA,GAAbpC,GAAa;AAqEnB,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}