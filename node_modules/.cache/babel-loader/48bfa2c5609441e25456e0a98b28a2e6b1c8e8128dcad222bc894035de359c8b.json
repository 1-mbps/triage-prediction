{"ast":null,"code":"var _jsxFileName = \"/Users/lucaskhan/Desktop/triage-prediction/triage-prediction/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    feature1: '',\n    feature2: ''\n  });\n  const [prediction, setPrediction] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Send data to Flask backend\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      const result = await response.json();\n      setPrediction(result.prediction);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Age:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: formData.feature1,\n          onChange: e => setFormData({\n            ...formData,\n            feature1: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Feature 2:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.feature2,\n          onChange: e => setFormData({\n            ...formData,\n            feature2: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), prediction !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Prediction: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"f1pG4hjTnHdfQu9aSmflsSyJ07o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","formData","setFormData","feature1","feature2","prediction","setPrediction","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","className","children","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lucaskhan/Desktop/triage-prediction/triage-prediction/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst App: React.FC = () => {\n  const [formData, setFormData] = useState({ feature1: '', feature2: '' });\n  const [prediction, setPrediction] = useState<number | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    try {\n      // Send data to Flask backend\n      const response = await fetch('http://localhost:5000/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      const result = await response.json();\n      setPrediction(result.prediction);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <label>\n          Age:\n          <input\n            type=\"number\"\n            value={formData.feature1}\n            onChange={(e) => setFormData({ ...formData, feature1: e.target.value })}\n          />\n        </label>\n        <br />\n        <label>\n          Feature 2:\n          <input\n            type=\"text\"\n            value={formData.feature2}\n            onChange={(e) => setFormData({ ...formData, feature2: e.target.value })}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Predict</button>\n      </form>\n      {prediction !== null && <p>Prediction: {prediction}</p>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}